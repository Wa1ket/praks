<Page x:Class="praks.PageEmployee"
      xmlns:core="clr-namespace:praks.ListTitle"
      xmlns:rule="clr-namespace:praks_validation_rules"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:command ="clr-namespace:praks.DataCommands"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:praks"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PageEmployee"
      Loaded="Page_Loaded" >



    <Page.Resources>
        <core:ListTitle x:Key="listTitle"></core:ListTitle>


            <DataTemplate x:Key="DatеTemplate">
            <TextBlock Text="{Binding BirthDate, StringFormat={}{0:dd\.}{0:MM\.}{0:yyyy}}"
           VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
        </DataTemplate>
        
        <DataTemplate x:Key="EditingDateTemplate">
            <DatePicker SelectedDate="{Binding BirthDate, Mode= TwoWay, UpdateSourceTrigger= PropertyChanged}"></DatePicker>
        </DataTemplate>
        <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Padding" Value="-2"></Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                            Path =(Validation.Errors)[0].ErrorContent}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    

    <StackPanel Background="{StaticResource BackgroundWindowResource}" Margin="3,10,-468,-14">
        
        <Menu>
            <MenuItem Header="Действие">
                <MenuItem Header ="Отменить"  Command ="Undo"></MenuItem>
                <Separator></Separator>
                <MenuItem Header ="Создать" Command ="New"></MenuItem>
                <MenuItem Header ="Редактировать" Command ="command:DataCommands.Edit"></MenuItem>
                <MenuItem Header ="Сохранить" Command ="Save"></MenuItem>
                <MenuItem Header ="Найти" Command ="Find"></MenuItem>
                <Separator></Separator>
                <MenuItem Header ="Удалить" Command ="command:DataCommands.Delete"></MenuItem>
            </MenuItem>
            <MenuItem Header="Отчет"></MenuItem>
        </Menu>
        <ToolBar>
            <Button x:Name="Undo" Command ="Undo" ToolTip="Отменить редактирование/создание" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\undo.png" Height="25" Width="25"></Image>
            </Button>
            <Button x:Name="New" Command ="New" ToolTip="Добавить" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\add.png" Height="25" Width="25"></Image>
            </Button>
            <Button x:Name="Edit" Command ="command:DataCommands.Edit" ToolTip="Редактировать" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\edit.png" Height="25" Width="25"></Image>
            </Button>
            <Button x:Name="Find" Command ="Find" ToolTip="Поиск" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\find.png" Height="25" Width="25"></Image>
            </Button>
            <Button x:Name="Save" Command ="Save" ToolTip="Сохранить" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\save.png" Height="25" Width="25"></Image>
            </Button>
            <Button x:Name="Delete" Command ="command:DataCommands.Delete" ToolTip="Удалить" Margin="5,2,5,2">
                <Image Source="A:\progs\pictures\cancel.png" Height="25" Width="25"></Image>
            </Button>
        </ToolBar>
        <TextBlock Margin="5">Список сотрудников</TextBlock>

        <DataGrid x:Name="DataGridEmployee"
                  ItemsSource="{Binding}"
                  AutoGenerateColumns="False"
                  HorizontalAlignment="Left"
                  MaxWidth="1000"
                  MaxHeight="295"
                  RowBackground="#FF1F33EB"
                  AlternatingRowBackground="#FC96CFD4"
                  BorderBrush="#FF1F33EB"
                  BorderThickness="3"
                  RowHeight="25"
                  Cursor="Hand"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  Width="985">
            
            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2"
                          ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                          Path = (Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}"
                                 Height="{TemplateBinding FontSize}"></Ellipse>
                        <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold"
                                   Foreground="Wheat" HorizontalAlignment="Center"></TextBlock>
                        

                    </Grid>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>
            <DataGrid.Columns >
                <DataGridTextColumn Header="Фамилия" Binding="{Binding Surname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Имя" Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridComboBoxColumn Header ="Должность" 
                                        ItemsSource="{Binding Source={StaticResource listTitle}}"
                                        DisplayMemberPath="Title1"
                                        SelectedValueBinding="{Binding Path = TitleId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValuePath ="ID"></DataGridComboBoxColumn>
                <DataGridTemplateColumn Header="Дата рождения" 
                                        CellTemplate = "{StaticResource DatеTemplate}" 
                                        CellEditingTemplate="{StaticResource EditingDateTemplate }"></DataGridTemplateColumn>
                <DataGridTextColumn Header="Телефон" Binding="{Binding Telephone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Электронная почта" EditingElementStyle="{StaticResource errorStyle}">
                    <DataGridTextColumn.Binding>
                        <Binding Path="Email" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnExceptions="True"> 
                            <Binding.ValidationRules>
                                <rule:EmailRule></rule:EmailRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Border>
        </Border>
    </StackPanel>
    <Page.CommandBindings>
        <CommandBinding Command="{x:Static command:DataCommands.Edit}"
                 Executed="EditCommandBinding_Executed"
                 CanExecute="EditCommandBinding_CanExecute">
        </CommandBinding>
        <CommandBinding Command="{x:Static command:DataCommands.Delete}"
         Executed="DeleteCommandBinding_Executed"
         CanExecute="DeleteCommandBinding_CanExecute">
        </CommandBinding>
        <CommandBinding Command="Undo" Executed="UndoCommandBinding_Executed"
                CanExecute="UndoCommandBinding_CanExecute">
        </CommandBinding>
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed"
                CanExecute="SaveCommandBinding_CanExecute">
        </CommandBinding>
        <CommandBinding Command="Find" Executed="FindCommandBinding_Executed"
          CanExecute="FindCommandBinding_CanExecute">
        </CommandBinding>
        <CommandBinding Command="New" Executed="NewCommandBinding_Executed"
          CanExecute="NewCommandBinding_CanExecute">
        </CommandBinding>
    </Page.CommandBindings>
    


</Page>
